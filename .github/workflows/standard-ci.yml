name: Pysparks CI

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      module: 
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: 'Dockerfile'
      context:
        required: false
        type: string
        default: '.'
      cluster:
         required: false
         type: string
         default: 'office-test'
    secrets:
      REGISTRY_SERVER:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: ${{ inputs.skip-build != 'true' }}
      -
        name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        if: ${{ inputs.skip-build != 'true' }}
      - 
        name: Generate Tag Version
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          bump_each_commit: true
        if: ${{ inputs.skip-build != 'true' }}
      -
        name: Generate Image Tag
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
          echo "TAG=${{ steps.version.outputs.version }}-`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
        if: ${{ inputs.skip-build != 'true' }}
      -
        name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          push: true
          file: ${{ inputs.dockerfile }}
          build-args: |
            PYPI_USERNAME=${{ secrets.PYPI_USERNAME }}
            PYPI_PASSWORD=${{ secrets.PYPI_PASSWORD }}
          tags: ${{ secrets.REGISTRY_SERVER }}/${{ inputs.project }}:${{ env.TAG }},${{ secrets.REGISTRY_SERVER }}/${{ inputs.project}}:latest
        if: ${{ inputs.skip-build != 'true' }}
      - 
        name: Update image in deploy files
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-image.yml
          repo: VietQuant/gitops
          ref: main
          token: ${{ secrets.PAT }}
          inputs: '{"cluster": "${{ inputs.cluster }}", "module": "${{ inputs.module }}", "actor": "${{ github.actor }}", "image": "${{ secrets.REGISTRY_SERVER }}/${{ inputs.project }}:${{ env.TAG }}"}'
